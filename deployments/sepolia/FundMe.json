{
  "address": "0x5eF0ddBB2C7bAaBfb54ac7F2C0a773fc1d2864D7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x705d86e861f3781706d83dd15dc3da23101bfd518c88e9513219218e29c652cf",
  "receipt": {
    "to": null,
    "from": "0xBbb8b9199B5F20cdc2A66748f8653B8a82d5e8C3",
    "contractAddress": "0x5eF0ddBB2C7bAaBfb54ac7F2C0a773fc1d2864D7",
    "transactionIndex": 39,
    "gasUsed": "886353",
    "logsBloom": "0x
    "blockHash": "0x9b927d14df78e7e0b62f2567cbd134f9eb5e5c332b37037c3a18ae46553d9497",
    "transactionHash": "0x705d86e861f3781706d83dd15dc3da23101bfd518c88e9513219218e29c652cf",
    "logs": [],
    "blockNumber": 4932348,
    "cumulativeGasUsed": "6942699",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5f4ec3df9cbd43714fe2740f5e3616155c5b8419"
  ],
  "numDeployments": 2,
  "solcInputHash": "6720f5a3d35831ca62769a0353897d46",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Popoola Sinaayo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a simple funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Popoola Sinaayo\\n * @notice This contract is to demo a simple funding contract\\n * @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    // Types Desclarations\\n    using PriceConverter for uint256;\\n\\n    // Naming Conveention\\n    // s_ in the front of variables that are storage based\\n    // i_ in the front of immutable variable\\n    // CAPITALLETTTER for constants\\n\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 1 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    \\n    constructor(address priceFeedAddress) { \\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n     fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    // function getVersion() public view returns (uint256){\\n    //     // ETH/USD price feed address of Sepolia Network.\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n    //     return priceFeed.version();\\n    // }\\n    \\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n    \\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n   \\n\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0x789e3398a03e91080d10ebef6a8667571f830bf6521cd4e0b42da1cdb7dcbf42\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeedAddress\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            // 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n            priceFeedAddress \\n        );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6cea6676e45e391bea8c9413b6d112e24ccb345921b0aac31752ae5e5c9a13d0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610f94380380610f948339818101604052810190610032919061011d565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b610e3b806101596000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063d7b4750c14610177578063dba6335f146101b45761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba919061084d565b610318565b6040516100cc9190610893565b60405180910390f35b3480156100e157600080fd5b506100ea610360565b005b3480156100f857600080fd5b506101016105a2565b60405161010e9190610893565b60405180910390f35b34801561012357600080fd5b5061012c6105ae565b60405161013991906108bd565b60405180910390f35b34801561014e57600080fd5b506101576105d8565b6040516101649190610937565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061019e6004803603810190610199919061097e565b610602565b6040516101ab91906108bd565b60405180910390f35b3480156101c057600080fd5b506101c961064a565b6040516101d691906108bd565b60405180910390f35b670de0b6b3a764000061021d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067090919063ffffffff16565b101561025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610a08565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610a57565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104925760006001828154811061040d5761040c610a8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048a90610aba565b9150506103ea565b50600067ffffffffffffffff8111156104ae576104ad610b02565b5b6040519080825280602002602001820160405280156104dc5781602001602082028036833780820191505090505b50600190805190602001906104f2929190610743565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051990610b62565b60006040518083038185875af1925050503d8060008114610556576040519150601f19603f3d011682016040523d82523d6000602084013e61055b565b606091505b505090508061059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690610bc3565b60405180910390fd5b50565b670de0b6b3a764000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061061857610617610a8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061067c836106ac565b90506000670de0b6b3a764000085836106959190610be3565b61069f9190610c54565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190610d12565b5050509150506402540be4008161073a9190610d8d565b92505050919050565b8280548282559060005260206000209081019282156107bc579160200282015b828111156107bb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610763565b5b5090506107c991906107cd565b5090565b5b808211156107e65760008160009055506001016107ce565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081a826107ef565b9050919050565b61082a8161080f565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b600060208284031215610863576108626107ea565b5b600061087184828501610838565b91505092915050565b6000819050919050565b61088d8161087a565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b78161080f565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6000819050919050565b60006108fd6108f86108f3846107ef565b6108d8565b6107ef565b9050919050565b600061090f826108e2565b9050919050565b600061092182610904565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b61095b8161087a565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b600060208284031215610994576109936107ea565b5b60006109a284828501610969565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109f2601b836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a628261087a565b9150610a6d8361087a565b9250828201905080821115610a8557610a84610a28565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ac58261087a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af757610af6610a28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b4c600083610b31565b9150610b5782610b3c565b600082019050919050565b6000610b6d82610b3f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bad600b836109ab565b9150610bb882610b77565b602082019050919050565b60006020820190508181036000830152610bdc81610ba0565b9050919050565b6000610bee8261087a565b9150610bf98361087a565b9250828202610c078161087a565b91508282048414831517610c1e57610c1d610a28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5f8261087a565b9150610c6a8361087a565b925082610c7a57610c79610c25565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ca481610c85565b8114610caf57600080fd5b50565b600081519050610cc181610c9b565b92915050565b6000819050919050565b610cda81610cc7565b8114610ce557600080fd5b50565b600081519050610cf781610cd1565b92915050565b600081519050610d0c81610952565b92915050565b600080600080600060a08688031215610d2e57610d2d6107ea565b5b6000610d3c88828901610cb2565b9550506020610d4d88828901610ce8565b9450506040610d5e88828901610cfd565b9350506060610d6f88828901610cfd565b9250506080610d8088828901610cb2565b9150509295509295909350565b6000610d9882610cc7565b9150610da383610cc7565b9250828202610db181610cc7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610de957610de8610a28565b5b8282058414831517610dfe57610dfd610a28565b5b509291505056fea264697066735822122041a9f46a881fd4c8e0bc1607d6f6f18f9c13d30c59f11b435d68545ac12e20fa64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063d7b4750c14610177578063dba6335f146101b45761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100bf60048036038101906100ba919061084d565b610318565b6040516100cc9190610893565b60405180910390f35b3480156100e157600080fd5b506100ea610360565b005b3480156100f857600080fd5b506101016105a2565b60405161010e9190610893565b60405180910390f35b34801561012357600080fd5b5061012c6105ae565b60405161013991906108bd565b60405180910390f35b34801561014e57600080fd5b506101576105d8565b6040516101649190610937565b60405180910390f35b6101756101df565b005b34801561018357600080fd5b5061019e6004803603810190610199919061097e565b610602565b6040516101ab91906108bd565b60405180910390f35b3480156101c057600080fd5b506101c961064a565b6040516101d691906108bd565b60405180910390f35b670de0b6b3a764000061021d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067090919063ffffffff16565b101561025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590610a08565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ac9190610a57565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104925760006001828154811061040d5761040c610a8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061048a90610aba565b9150506103ea565b50600067ffffffffffffffff8111156104ae576104ad610b02565b5b6040519080825280602002602001820160405280156104dc5781602001602082028036833780820191505090505b50600190805190602001906104f2929190610743565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161051990610b62565b60006040518083038185875af1925050503d8060008114610556576040519150601f19603f3d011682016040523d82523d6000602084013e61055b565b606091505b505090508061059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059690610bc3565b60405180910390fd5b50565b670de0b6b3a764000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061061857610617610a8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061067c836106ac565b90506000670de0b6b3a764000085836106959190610be3565b61069f9190610c54565b9050809250505092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107239190610d12565b5050509150506402540be4008161073a9190610d8d565b92505050919050565b8280548282559060005260206000209081019282156107bc579160200282015b828111156107bb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610763565b5b5090506107c991906107cd565b5090565b5b808211156107e65760008160009055506001016107ce565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061081a826107ef565b9050919050565b61082a8161080f565b811461083557600080fd5b50565b60008135905061084781610821565b92915050565b600060208284031215610863576108626107ea565b5b600061087184828501610838565b91505092915050565b6000819050919050565b61088d8161087a565b82525050565b60006020820190506108a86000830184610884565b92915050565b6108b78161080f565b82525050565b60006020820190506108d260008301846108ae565b92915050565b6000819050919050565b60006108fd6108f86108f3846107ef565b6108d8565b6107ef565b9050919050565b600061090f826108e2565b9050919050565b600061092182610904565b9050919050565b61093181610916565b82525050565b600060208201905061094c6000830184610928565b92915050565b61095b8161087a565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b600060208284031215610994576109936107ea565b5b60006109a284828501610969565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b60006109f2601b836109ab565b91506109fd826109bc565b602082019050919050565b60006020820190508181036000830152610a21816109e5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a628261087a565b9150610a6d8361087a565b9250828201905080821115610a8557610a84610a28565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ac58261087a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610af757610af6610a28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b4c600083610b31565b9150610b5782610b3c565b600082019050919050565b6000610b6d82610b3f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bad600b836109ab565b9150610bb882610b77565b602082019050919050565b60006020820190508181036000830152610bdc81610ba0565b9050919050565b6000610bee8261087a565b9150610bf98361087a565b9250828202610c078161087a565b91508282048414831517610c1e57610c1d610a28565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c5f8261087a565b9150610c6a8361087a565b925082610c7a57610c79610c25565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ca481610c85565b8114610caf57600080fd5b50565b600081519050610cc181610c9b565b92915050565b6000819050919050565b610cda81610cc7565b8114610ce557600080fd5b50565b600081519050610cf781610cd1565b92915050565b600081519050610d0c81610952565b92915050565b600080600080600060a08688031215610d2e57610d2d6107ea565b5b6000610d3c88828901610cb2565b9550506020610d4d88828901610ce8565b9450506040610d5e88828901610cfd565b9350506060610d6f88828901610cfd565b9250506080610d8088828901610cb2565b9150509295509295909350565b6000610d9882610cc7565b9150610da383610cc7565b9250828202610db181610cc7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610de957610de8610a28565b5b8282058414831517610dfe57610dfd610a28565b5b509291505056fea264697066735822122041a9f46a881fd4c8e0bc1607d6f6f18f9c13d30c59f11b435d68545ac12e20fa64736f6c63430008130033",
  "devdoc": {
    "author": "Popoola Sinaayo",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a simple funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}